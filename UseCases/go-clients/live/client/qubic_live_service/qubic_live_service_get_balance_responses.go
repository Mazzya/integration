// Code generated by go-swagger; DO NOT EDIT.

package qubic_live_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qubic/integration/go-clients/live/models"
)

// QubicLiveServiceGetBalanceReader is a Reader for the QubicLiveServiceGetBalance structure.
type QubicLiveServiceGetBalanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QubicLiveServiceGetBalanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewQubicLiveServiceGetBalanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewQubicLiveServiceGetBalanceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewQubicLiveServiceGetBalanceOK creates a QubicLiveServiceGetBalanceOK with default headers values
func NewQubicLiveServiceGetBalanceOK() *QubicLiveServiceGetBalanceOK {
	return &QubicLiveServiceGetBalanceOK{}
}

/*
QubicLiveServiceGetBalanceOK describes a response with status code 200, with default header values.

A successful response.
*/
type QubicLiveServiceGetBalanceOK struct {
	Payload *models.PbGetBalanceResponse
}

// IsSuccess returns true when this qubic live service get balance o k response has a 2xx status code
func (o *QubicLiveServiceGetBalanceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this qubic live service get balance o k response has a 3xx status code
func (o *QubicLiveServiceGetBalanceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this qubic live service get balance o k response has a 4xx status code
func (o *QubicLiveServiceGetBalanceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this qubic live service get balance o k response has a 5xx status code
func (o *QubicLiveServiceGetBalanceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this qubic live service get balance o k response a status code equal to that given
func (o *QubicLiveServiceGetBalanceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the qubic live service get balance o k response
func (o *QubicLiveServiceGetBalanceOK) Code() int {
	return 200
}

func (o *QubicLiveServiceGetBalanceOK) Error() string {
	return fmt.Sprintf("[GET /balances/{id}][%d] qubicLiveServiceGetBalanceOK  %+v", 200, o.Payload)
}

func (o *QubicLiveServiceGetBalanceOK) String() string {
	return fmt.Sprintf("[GET /balances/{id}][%d] qubicLiveServiceGetBalanceOK  %+v", 200, o.Payload)
}

func (o *QubicLiveServiceGetBalanceOK) GetPayload() *models.PbGetBalanceResponse {
	return o.Payload
}

func (o *QubicLiveServiceGetBalanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PbGetBalanceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQubicLiveServiceGetBalanceDefault creates a QubicLiveServiceGetBalanceDefault with default headers values
func NewQubicLiveServiceGetBalanceDefault(code int) *QubicLiveServiceGetBalanceDefault {
	return &QubicLiveServiceGetBalanceDefault{
		_statusCode: code,
	}
}

/*
QubicLiveServiceGetBalanceDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type QubicLiveServiceGetBalanceDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this qubic live service get balance default response has a 2xx status code
func (o *QubicLiveServiceGetBalanceDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this qubic live service get balance default response has a 3xx status code
func (o *QubicLiveServiceGetBalanceDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this qubic live service get balance default response has a 4xx status code
func (o *QubicLiveServiceGetBalanceDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this qubic live service get balance default response has a 5xx status code
func (o *QubicLiveServiceGetBalanceDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this qubic live service get balance default response a status code equal to that given
func (o *QubicLiveServiceGetBalanceDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the qubic live service get balance default response
func (o *QubicLiveServiceGetBalanceDefault) Code() int {
	return o._statusCode
}

func (o *QubicLiveServiceGetBalanceDefault) Error() string {
	return fmt.Sprintf("[GET /balances/{id}][%d] QubicLiveService_GetBalance default  %+v", o._statusCode, o.Payload)
}

func (o *QubicLiveServiceGetBalanceDefault) String() string {
	return fmt.Sprintf("[GET /balances/{id}][%d] QubicLiveService_GetBalance default  %+v", o._statusCode, o.Payload)
}

func (o *QubicLiveServiceGetBalanceDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *QubicLiveServiceGetBalanceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
