// Code generated by go-swagger; DO NOT EDIT.

package tx_status_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qubic/integration/UseCases/go-clients/tx-status/models"
)

// TxStatusServiceGetTickTransactionsStatusReader is a Reader for the TxStatusServiceGetTickTransactionsStatus structure.
type TxStatusServiceGetTickTransactionsStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TxStatusServiceGetTickTransactionsStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTxStatusServiceGetTickTransactionsStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewTxStatusServiceGetTickTransactionsStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTxStatusServiceGetTickTransactionsStatusOK creates a TxStatusServiceGetTickTransactionsStatusOK with default headers values
func NewTxStatusServiceGetTickTransactionsStatusOK() *TxStatusServiceGetTickTransactionsStatusOK {
	return &TxStatusServiceGetTickTransactionsStatusOK{}
}

/*
TxStatusServiceGetTickTransactionsStatusOK describes a response with status code 200, with default header values.

A successful response.
*/
type TxStatusServiceGetTickTransactionsStatusOK struct {
	Payload *models.PbGetTickTransactionsStatusResponse
}

// IsSuccess returns true when this tx status service get tick transactions status o k response has a 2xx status code
func (o *TxStatusServiceGetTickTransactionsStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this tx status service get tick transactions status o k response has a 3xx status code
func (o *TxStatusServiceGetTickTransactionsStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tx status service get tick transactions status o k response has a 4xx status code
func (o *TxStatusServiceGetTickTransactionsStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this tx status service get tick transactions status o k response has a 5xx status code
func (o *TxStatusServiceGetTickTransactionsStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this tx status service get tick transactions status o k response a status code equal to that given
func (o *TxStatusServiceGetTickTransactionsStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the tx status service get tick transactions status o k response
func (o *TxStatusServiceGetTickTransactionsStatusOK) Code() int {
	return 200
}

func (o *TxStatusServiceGetTickTransactionsStatusOK) Error() string {
	return fmt.Sprintf("[GET /tx-status/ticks/{tickNumber}][%d] txStatusServiceGetTickTransactionsStatusOK  %+v", 200, o.Payload)
}

func (o *TxStatusServiceGetTickTransactionsStatusOK) String() string {
	return fmt.Sprintf("[GET /tx-status/ticks/{tickNumber}][%d] txStatusServiceGetTickTransactionsStatusOK  %+v", 200, o.Payload)
}

func (o *TxStatusServiceGetTickTransactionsStatusOK) GetPayload() *models.PbGetTickTransactionsStatusResponse {
	return o.Payload
}

func (o *TxStatusServiceGetTickTransactionsStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PbGetTickTransactionsStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTxStatusServiceGetTickTransactionsStatusDefault creates a TxStatusServiceGetTickTransactionsStatusDefault with default headers values
func NewTxStatusServiceGetTickTransactionsStatusDefault(code int) *TxStatusServiceGetTickTransactionsStatusDefault {
	return &TxStatusServiceGetTickTransactionsStatusDefault{
		_statusCode: code,
	}
}

/*
TxStatusServiceGetTickTransactionsStatusDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type TxStatusServiceGetTickTransactionsStatusDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this tx status service get tick transactions status default response has a 2xx status code
func (o *TxStatusServiceGetTickTransactionsStatusDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this tx status service get tick transactions status default response has a 3xx status code
func (o *TxStatusServiceGetTickTransactionsStatusDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this tx status service get tick transactions status default response has a 4xx status code
func (o *TxStatusServiceGetTickTransactionsStatusDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this tx status service get tick transactions status default response has a 5xx status code
func (o *TxStatusServiceGetTickTransactionsStatusDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this tx status service get tick transactions status default response a status code equal to that given
func (o *TxStatusServiceGetTickTransactionsStatusDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the tx status service get tick transactions status default response
func (o *TxStatusServiceGetTickTransactionsStatusDefault) Code() int {
	return o._statusCode
}

func (o *TxStatusServiceGetTickTransactionsStatusDefault) Error() string {
	return fmt.Sprintf("[GET /tx-status/ticks/{tickNumber}][%d] TxStatusService_GetTickTransactionsStatus default  %+v", o._statusCode, o.Payload)
}

func (o *TxStatusServiceGetTickTransactionsStatusDefault) String() string {
	return fmt.Sprintf("[GET /tx-status/ticks/{tickNumber}][%d] TxStatusService_GetTickTransactionsStatus default  %+v", o._statusCode, o.Payload)
}

func (o *TxStatusServiceGetTickTransactionsStatusDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *TxStatusServiceGetTickTransactionsStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
