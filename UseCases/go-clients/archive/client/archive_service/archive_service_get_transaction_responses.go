// Code generated by go-swagger; DO NOT EDIT.

package archive_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qubic/integration/UseCases/go-clients/archive/models"
)

// ArchiveServiceGetTransactionReader is a Reader for the ArchiveServiceGetTransaction structure.
type ArchiveServiceGetTransactionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArchiveServiceGetTransactionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewArchiveServiceGetTransactionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewArchiveServiceGetTransactionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArchiveServiceGetTransactionOK creates a ArchiveServiceGetTransactionOK with default headers values
func NewArchiveServiceGetTransactionOK() *ArchiveServiceGetTransactionOK {
	return &ArchiveServiceGetTransactionOK{}
}

/*
ArchiveServiceGetTransactionOK describes a response with status code 200, with default header values.

A successful response.
*/
type ArchiveServiceGetTransactionOK struct {
	Payload *models.PbGetTransactionResponse
}

// IsSuccess returns true when this archive service get transaction o k response has a 2xx status code
func (o *ArchiveServiceGetTransactionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this archive service get transaction o k response has a 3xx status code
func (o *ArchiveServiceGetTransactionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this archive service get transaction o k response has a 4xx status code
func (o *ArchiveServiceGetTransactionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this archive service get transaction o k response has a 5xx status code
func (o *ArchiveServiceGetTransactionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this archive service get transaction o k response a status code equal to that given
func (o *ArchiveServiceGetTransactionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the archive service get transaction o k response
func (o *ArchiveServiceGetTransactionOK) Code() int {
	return 200
}

func (o *ArchiveServiceGetTransactionOK) Error() string {
	return fmt.Sprintf("[GET /transactions/{txId}][%d] archiveServiceGetTransactionOK  %+v", 200, o.Payload)
}

func (o *ArchiveServiceGetTransactionOK) String() string {
	return fmt.Sprintf("[GET /transactions/{txId}][%d] archiveServiceGetTransactionOK  %+v", 200, o.Payload)
}

func (o *ArchiveServiceGetTransactionOK) GetPayload() *models.PbGetTransactionResponse {
	return o.Payload
}

func (o *ArchiveServiceGetTransactionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PbGetTransactionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArchiveServiceGetTransactionDefault creates a ArchiveServiceGetTransactionDefault with default headers values
func NewArchiveServiceGetTransactionDefault(code int) *ArchiveServiceGetTransactionDefault {
	return &ArchiveServiceGetTransactionDefault{
		_statusCode: code,
	}
}

/*
ArchiveServiceGetTransactionDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ArchiveServiceGetTransactionDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this archive service get transaction default response has a 2xx status code
func (o *ArchiveServiceGetTransactionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this archive service get transaction default response has a 3xx status code
func (o *ArchiveServiceGetTransactionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this archive service get transaction default response has a 4xx status code
func (o *ArchiveServiceGetTransactionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this archive service get transaction default response has a 5xx status code
func (o *ArchiveServiceGetTransactionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this archive service get transaction default response a status code equal to that given
func (o *ArchiveServiceGetTransactionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the archive service get transaction default response
func (o *ArchiveServiceGetTransactionDefault) Code() int {
	return o._statusCode
}

func (o *ArchiveServiceGetTransactionDefault) Error() string {
	return fmt.Sprintf("[GET /transactions/{txId}][%d] ArchiveService_GetTransaction default  %+v", o._statusCode, o.Payload)
}

func (o *ArchiveServiceGetTransactionDefault) String() string {
	return fmt.Sprintf("[GET /transactions/{txId}][%d] ArchiveService_GetTransaction default  %+v", o._statusCode, o.Payload)
}

func (o *ArchiveServiceGetTransactionDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ArchiveServiceGetTransactionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
